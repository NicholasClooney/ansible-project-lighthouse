---
- name: Determine provisioned user name
  ansible.builtin.set_fact:
    deploy_user_name_effective: "{{ deploy_user_name | default('deploy') }}"

- name: Ensure sudo group exists
  become: true
  ansible.builtin.group:
    name: sudo
    state: present

- name: Ensure deploy user exists
  become: true
  ansible.builtin.user:
    name: "{{ deploy_user_name_effective }}"
    home: "/home/{{ deploy_user_name_effective }}"
    shell: /usr/bin/fish
    create_home: true
    groups: sudo
    append: true

- name: Configure passwordless sudo for deploy user
  become: true
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ deploy_user_name_effective }}"
    content: "{{ deploy_user_name_effective }} ALL=(ALL) NOPASSWD:ALL\n"
    owner: root
    group: root
    mode: '0440'
    validate: 'visudo -cf %s'

- name: Check for root SSH key directory
  become: true
  ansible.builtin.stat:
    path: /root/.ssh
  register: root_ssh_dir

- name: Sync root SSH keys to deploy user
  become: true
  ansible.builtin.copy:
    src: /root/.ssh/
    dest: "/home/{{ deploy_user_name_effective }}/.ssh/"
    owner: "{{ deploy_user_name_effective }}"
    group: "{{ deploy_user_name_effective }}"
    mode: preserve
    remote_src: true
  when:
    - deploy_user_sync_root_keys | bool
    - root_ssh_dir.stat.exists | default(false)

- name: Verify sudo access for deploy user
  become: true
  become_user: "{{ deploy_user_name_effective }}"
  ansible.builtin.command:
    cmd: sudo -n whoami
  register: deploy_sudo_check
  changed_when: false

- name: Assert sudo check returned root
  ansible.builtin.assert:
    that:
      - deploy_sudo_check.stdout is defined
      - deploy_sudo_check.stdout.strip() == 'root'
    fail_msg: "User {{ deploy_user_name_effective }} cannot run sudo -n whoami successfully."
    quiet: true
