---
- name: Check for V2Ray binary
  ansible.builtin.stat:
    path: /usr/local/bin/v2ray
  register: v2ray_binary

- name: Download V2Ray install script
  become: true
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh
    dest: "{{ v2ray_install_script_path }}"
    mode: '0755'
  when: not v2ray_binary.stat.exists

- name: Run V2Ray install script
  become: true
  ansible.builtin.command:
    cmd: "{{ v2ray_install_script_path }}"
  when: not v2ray_binary.stat.exists
  register: v2ray_install
  changed_when: v2ray_install.rc == 0
  notify: Restart V2Ray

- name: Copy V2Ray configuration
  become: true
  ansible.builtin.copy:
    src: "{{ v2ray_config_src }}"
    dest: "{{ v2ray_config_path }}"
    owner: "{{ v2ray_config_owner }}"
    group: "{{ v2ray_config_group }}"
    mode: "{{ v2ray_config_mode }}"
  notify: Restart V2Ray

- name: Deploy supporting files for V2Ray
  become: true
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop: "{{ v2ray_extra_files }}"
  loop_control:
    label: "{{ item.dest }}"
  when: v2ray_extra_files | length > 0

- name: Deploy Nginx configuration files for V2Ray
  become: true
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop: "{{ v2ray_nginx_files }}"
  loop_control:
    label: "{{ item.dest }}"
  when: v2ray_nginx_files | length > 0
  notify: Reload Nginx

- name: Ensure V2Ray service is enabled and running
  become: true
  ansible.builtin.service:
    name: "{{ v2ray_service_name }}"
    state: started
    enabled: true
